#!/bin/sh
devel=""

print_usage() {
	echo "Usage: nor-update [-d]"
}

print_help() {
	print_usage
	cat <<EOF
Tool to update firmware in NOR memory. Be carefull with this!

Options:
  -d   Use devel version - bleeding edge, but might brick your device
  -h   Show help
EOF
}


die() {
	echo "$1" >&2
	exit 1
}

fix_boot_scr() {
	local dev="$(sed -n 's|^\(/dev/[a-z0-9]*\) / btrfs .*|\1|p' /proc/mounts)"
	# Is root on btrfs?
	[ -n "$dev" ] || return
	local tmpdir="$(mktemp -d)"
	[ -n "$tmpdir" ] || die "Can't create a temp directory!"
	mount "$dev" "$tmpdir" || die "Can't mount root filesystem"
	[ -e "$tmpdir"/boot.scr ] || ln -sf @/boot/boot.scr "$tmpdir"/boot.scr || die "Can't create boot.scr symlink"
	umount "$tmpdir"
	rmdir "$tmpdir"
}

flash() {
	local part="$1"
	[ -r "$part" ] || return

	mtd verify "$1" "/dev/$part" || \
		mtd -e "/dev/$part" write "$1" "/dev/$part"
}


while [ -n "$1" ]; do
	case "$1" in
		"-d")
			devel="y"
			;;
		"-h")
			print_help
			exit 0
			;;
		*)
			echo "Unknown argument: $1"
			print_usage
			exit 1
			;;
	esac
	shift
done

fix_boot_scr

if [ -z "$devel" ]; then
	cd "/usr/share/nor-firmware/"
else
	cd "/usr/share/nor-firmware-unstable/"
fi

for m in mtd[0-9]; do
	flash "$m"
done
