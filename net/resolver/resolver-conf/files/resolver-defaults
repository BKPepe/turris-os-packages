#!/bin/sh

. /lib/functions.sh

handle_dns_port() {
	config_get port $1 port
	if [ "$port" -ne "0" ]; then
		# Note we have to use uci utility because
		# config_set is buggy see
		# https://openwrt.org/docs/guide-developer/config-scripting#setting_options_config_set
		uci set dhcp.$1.port=0
		uci commit dhcp
	fi
}

# Disable dnsmasq as default DNS resolver
config_load dhcp
config_foreach handle_dns_port dnsmasq

# Make sure we can set time for resolution to work, before the resolution works.
uci show system.ntp.server | grep -q '217\.31\.202\.100' || uci add_list system.ntp.server=217.31.202.100
# Also, when we have turned the dnsmasq DNS off, ask dnsmasq to advertise us as DNS server
uci show dhcp | sed -ne 's/^dhcp\.//;s/=dhcp$//p' | while read INTERFACE ; do
	# If the interface has an IP address. Otherwise, just ignore it.
	IP=$(uci -q get network."$INTERFACE".ipaddr)
	if [ -n "$IP" ] ; then
		OPTIONS=$(uci get dhcp."$INTERFACE".dhcp_option | grep "^6,")
		if [ -z "$OPTIONS" ] ; then
			uci -q add_list dhcp."$INTERFACE".dhcp_option="6,$IP"
		fi
	fi
done
uci commit dhcp
uci commit system


pref="$(uci get resolver.common.prefered_resolver)"
if [ "$pref" == "kresd" ]; then
	if [ -f "/etc/init.d/kresd" ]; then
		set_pref="kresd"
	elif [ -f "/etc/init.d/unbound" ]; then
		set_pref="unbound"
	else
		logger -t resolver_conf "Error! Could not find any resolver! DNS resolving will not work."
		exit 1
	fi
elif [ "$pref" == "unbound" ]; then
	if [ -f "/etc/init.d/unbound" ]; then
		set_pref="unbound"
	elif [ -f "/etc/init.d/kresd" ]; then
		set_pref="kresd"
	else
		logger -t resolver_conf "Error! Could not find any resolver! DNS resolving will not work."
		exit 1
	fi
fi

uci set resolver.common.prefered_resolver="$pref"
uci commit resolver

