From 13eae023ccc998308c4a091b9c2d021b1f333243 Mon Sep 17 00:00:00 2001
From: Vladimír Čunát <vladimir.cunat@nic.cz>
Date: Tue, 18 Apr 2017 12:24:04 +0200
Subject: [PATCH] rrcache: don't clobber pkt if failing the second step

I hope fixing this bug should diminish the recent experiences of Google
domains failing to resolve on Turris Omnia.
---
 lib/layer/rrcache.c | 10 ++++++++++
 1 file changed, 10 insertions(+), 0 deletions(-)

diff --git a/lib/layer/rrcache.c b/lib/layer/rrcache.c
index e7f3a0f..2d38734 100644
--- a/lib/layer/rrcache.c
+++ b/lib/layer/rrcache.c
@@ -117,6 +117,16 @@ static int loot_rrcache(struct kr_cache *cache, knot_pkt_t *pkt,
 	} else if (ret == 0 && dobit) {
 		ret = loot_rr(cache, pkt, qry->sname, qry->sclass, rrtype, qry,
 			      &rank, &flags, true, lowest_rank);
+		if (ret) {
+			/* We want to return failure, but the packet has been
+			 * updated already!  Let's try to clear it.
+			 * It might theoretically fail again while parsing question,
+			 * and we just log that condition (it might be non-fatal). */
+			if (kr_pkt_clear_payload(pkt)) {
+				assert(false);
+				VERBOSE_MSG(qry, "=> ERROR: work-around failed\n");
+			}
+		}
 	}
 	return ret;
 }
--
libgit2 0.24.0

