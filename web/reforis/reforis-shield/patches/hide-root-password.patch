From cf4799dc2321cdc0023df3449f2248341bd9d64d Mon Sep 17 00:00:00 2001
From: Michal Hrusecky <michal@hrusecky.net>
Date: Fri, 7 Aug 2020 01:40:01 +0200
Subject: [PATCH] Do not confuse people with root password

Hide root password dialog and always keep both passwords in sync.
---
 js/src/password/ForisPasswordForm.js | 17 -----------------
 js/src/password/Password.js          | 23 +++--------------------
 2 files changed, 3 insertions(+), 37 deletions(-)

Index: reforis-shield-1.0.1/js/src/password/ForisPasswordForm.js
===================================================================
--- reforis-shield-1.0.1.orig/js/src/password/ForisPasswordForm.js
+++ reforis-shield-1.0.1/js/src/password/ForisPasswordForm.js
@@ -19,7 +19,6 @@ ForisPasswordForm.propTypes = {
     formData: PropTypes.shape({
         currentForisPassword: PropTypes.string,
         newForisPassword: PropTypes.string,
-        sameForRoot: PropTypes.bool,
     }).isRequired,
     submitButtonState: PropTypes.oneOf(
         Object.keys(SUBMIT_BUTTON_STATES).map(
@@ -70,22 +69,6 @@ export default function ForisPasswordFor
                     }))}
                     disabled={disabled}
                 />
-                <CheckBox
-                    label={_(
-                        "Use same password for advanced administration (root)"
-                    )}
-                    helpText={_(
-                        "Same password would be used for accessing this administration interface, for root user in " +
-                            "LuCI web interface and for SSH login. Use a strong password! (If you choose not to set the password " +
-                            "for advanced configuration here, you will have the option to do so later. Until then, the root account " +
-                            "will be blocked.)"
-                    )}
-                    checked={formData.sameForRoot}
-                    onChange={setFormValue((value) => ({
-                        sameForRoot: { $set: value },
-                    }))}
-                    disabled={disabled}
-                />
                 <div className="text-right">
                     <SubmitButton
                         state={submitButtonState}
Index: reforis-shield-1.0.1/js/src/password/Password.js
===================================================================
--- reforis-shield-1.0.1.orig/js/src/password/Password.js
+++ reforis-shield-1.0.1/js/src/password/Password.js
@@ -24,7 +24,6 @@ import {
 import API_URLs from "common/API";
 
 import ForisPasswordForm from "./ForisPasswordForm";
-import RootPasswordForm from "./RootPasswordForm";
 
 Password.propTypes = {
     postCallback: PropTypes.func,
@@ -69,8 +68,6 @@ function PasswordForm({ postCallback, cu
         resetFormData({
             currentForisPassword: "",
             newForisPassword: "",
-            sameForRoot: false,
-            newRootPassword: "",
         });
     }, [resetFormData]);
 
@@ -127,8 +124,7 @@ function PasswordForm({ postCallback, cu
             foris_current_password: formState.data.currentForisPassword,
             foris_password: formState.data.newForisPassword,
         };
-        if (formState.data.sameForRoot)
-            data.root_password = formState.data.newForisPassword;
+        data.root_password = formState.data.newForisPassword;
         post({ data });
     }
 
@@ -158,29 +154,16 @@ function PasswordForm({ postCallback, cu
                 postForisPassword={postForisPassword}
                 passwordSet={currentPassword.password_set}
             />
-            {!formState.data.sameForRoot && (
-                <RootPasswordForm
-                    formData={formState.data}
-                    formErrors={formState.errors}
-                    submitButtonState={submitButtonState}
-                    disabled={isSending}
-                    setFormValue={onFormChangeHandler}
-                    postRootPassword={postRootPassword}
-                />
-            )}
         </div>
     );
 }
 
 function validator(formData) {
     const errors = {
-        newForisPassword: validatePassword(formData.newForisPassword),
-        newRootPassword: !formData.sameForRoot
-            ? validatePassword(formData.newRootPassword)
-            : null,
+        newForisPassword: validatePassword(formData.newForisPassword)
     };
 
-    if (errors.newForisPassword || errors.newRootPassword) return errors;
+    if (errors.newForisPassword) return errors;
     return {};
 }
 
